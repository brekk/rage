import type { CommandResult } from "Process"
import type { Wish } from "Wish"

import IO from "IO"
import { DEFAULT_COMMAND_OPTIONS, exec } from "Process"
import { join } from "String"

import { log } from "@/Log"



export alias CommandWish = Wish CommandResult CommandResult

run :: String -> List String -> CommandWish
export run = (cmd, args) => {
  summary = `${IO.green(cmd)} ${IO.yellow(join(" ", args))}`
  return pipe(
    log.external(summary),
    exec($, args, DEFAULT_COMMAND_OPTIONS),
  )(cmd)
}

export curl = run("curl")
export git = run("git")
export rm = run("rm")
export rimraf = pipe(
  of,
  mappend(["-rf"]),
  rm,
)
export mkdir = run("mkdir")
export madlib = run("madlib")
