import { Left, Right } from "Either"
import {} from "Wish"

import { signal } from "@/Wish"
import { indicate } from "@/aggreGATE"



/*
export handleProjectError = where {
  ScaffoldFail =>
    "Unable to create project scaffold"

  JsonNotCreated =>
    "Unable to create madlib.json"

  ReadmeNotUpdated =>
    "Unable to alter README.md"

  RepoNotInitialized =>
    "Unable to initialize git repository"

  InvalidRepo =>
    "Given repo is not valid"

  InvalidTemplate =>
    "Given template repo is not valid"

  InvalidIgnore =>
    "Unable to copy the .gitignore file via curl"

  SourceFail =>
    "Unable to create /src folder"

  MainFail =>
    "Unable to create src/Main.mad file"

  GenericError =>
    "The machine is sick"
}


export handleProjectStatus = where {
  Scaffold =>
    "Created project folder"

  GitIgnored =>
    "Pulled a .gitignore file via curl"

  JsonCreated =>
    "Created the madlib.json file"

  ReadmeUpdated =>
    "Updated the project README.md"

  RepoInitialized =>
    "Git repo initialized"

  RepoCreated =>
    "Created github repo programmatically"

  RemoteSet =>
    "Set git remote"

  SourceCreated =>
    "Created /src folder"

  MainCreated =>
    "Created src/Main.mad file"

  Ready =>
    "Got mad, quickly"
}
*/

export type StatusFail
  = ScaffoldFail
  | JsonFail
  | ReadmeFail
  | InitFail
  | RepoFail
  | IgnoreFail
  | SourceFail
  | MainFail

export type StatusPass
  = ScaffoldPass
  | JsonPass
  | ReadmePass
  | InitPass
  | RepoPass
  | IgnorePass
  | SourcePass
  | MainPass


export statusScaffold = signal(Left(ScaffoldFail), Right(ScaffoldPass))
export statusJson = signal(Left(JsonFail), Right(JsonPass))
export statusReadme = signal(Left(ReadmeFail), Right(ReadmePass))
export statusInit = signal(Left(InitFail), Right(InitPass))
export statusRepo = signal(Left(RepoFail), Right(RepoPass))
export statusIgnore = signal(Left(IgnoreFail), Right(IgnorePass))
export statusSource = signal(Left(SourceFail), Right(SourcePass))
export statusMain = signal(Left(MainFail), Right(MainPass))
