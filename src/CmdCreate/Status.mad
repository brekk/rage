import { Left, Right } from "Either"
import {} from "Wish"

import { signal } from "@/Wish"



// import { indicate } from "@/aggreGATE"



export handleProjectError = where {
  InitFail =>
    "Unable to initialize git project"

  ScaffoldFail =>
    "Unable to create project scaffold"

  JsonFail =>
    "Unable to create madlib.json"

  ReadmeFail =>
    "Unable to alter README.md"

  IgnoreFail =>
    "Unable to copy the .gitignore file via curl"

  SourceFail =>
    "Unable to create /src folder"

  MainFail =>
    "Unable to create src/Main.mad file"
}


export handleProjectStatus = where {
  ScaffoldPass =>
    "Created project folder"

  IgnorePass =>
    "Pulled a .gitignore file via curl"

  JsonPass =>
    "Created the madlib.json file"

  ReadmePass =>
    "Updated the project README.md"

  InitPass =>
    "Git repo initialized"

  SourcePass =>
    "Created /src folder"

  MainPass =>
    "Created src/Main.mad file"

  AllPass =>
    "Got mad, quickly"
}

export type StatusFail
  = ScaffoldFail
  | JsonFail
  | ReadmeFail
  | InitFail
  | IgnoreFail
  | SourceFail
  | MainFail

export type StatusPass
  = ScaffoldPass
  | JsonPass
  | ReadmePass
  | InitPass
  | IgnorePass
  | SourcePass
  | MainPass
  | AllPass


export statusScaffold = signal(ScaffoldFail, ScaffoldPass)
export statusJson = signal(JsonFail, JsonPass)
export statusReadme = signal(ReadmeFail, ReadmePass)
export statusInit = signal(InitFail, InitPass)
export statusIgnore = signal(IgnoreFail, IgnorePass)
export statusSource = signal(SourceFail, SourcePass)
export statusMain = signal(MainFail, MainPass)
