import type { MadJson, MadPackage } from "@/MadlibJson/Types"

import { fromMaybe } from "Maybe"

import Deps from "@/Dependency"
import { madParse } from "@/MadlibJson/Parse"



export parse = madParse

concrete :: MadJson -> MadPackage
export concrete = where {
  { bin, dependencies, madlibVersion, main, name, version } =>
    (
      {
        bin,
        madlibVersion,
        main,
        name,
        version,
        dependencies: pipe(
          map(map(Deps.concrete)),
          fromMaybe([]),
        )(dependencies),
      }
    )
}

hasDependency :: MadPackage -> String -> Boolean
export hasDependency = (json, dep) => pipe(
  .dependencies,
  Deps.includes(dep),
)(json)
